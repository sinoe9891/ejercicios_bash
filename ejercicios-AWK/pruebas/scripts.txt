$0 para toda la línea.
$1 para el primer campo.
$2 para el segundo campo.
$n para el campo enésimo campo.
FS → Field Separator (Espacio o TAB por defecto)
NF → Número de campos (fields) en la línea actual
NR → Número de líneas (records) en el stream/fichero a procesar.
OFS → Output Field Separator (" ").
ORS → Output Record Separator ("\n").
RS → Input Record Separator ("\n").
BEGIN → Define sentencias a ejecutar antes de empezar el procesado.
END → Define sentencias a ejecutar tras acabar el procesado.
length → Longitud de la línea en proceso.
FILENAME → Nombre del fichero en procesamiento.
ARGC → Número de parámetros de entrada al programa.
ARGV → Valor de los parámetros pasados al programa.


Imprime el primer nombre
awk '{print($1)}' datos.txt

Condición si el primer parametro es igual entonces imprima el segundo.
awk '$1=="DANNY" {print($2)}' datos.txt

Condición si el primer parametro es igual entonces imprima toda la línea.
awk '$1=="DANNY" {print($0)}' datos.txt

Imprime el primer parametro y el 4 parametro
awk '{print($1, $4)}' datos.txt

Definimos el primer paramentro cuando encuentre la primera coma.
awk 'BEGIN { FS = "," }{print($1, $3)}' datos.txt

OFS Indica que separador podemos usar en esta caso un guión(-).
awk 'BEGIN { FS = ","; OFS = "-" }{print($1, $3)}' datos.txt

BEGIN { OFS = ", " }{print($1,$2, $3, $4, $5, $6, $7, $8, $9)}

Para ejecutar
awk -f prueba.awk datos.tx


Imprime el primer parametro de las líneas que contienen 8 parametros.
awk 'NF <= 8 {print $1}' datos.txt 


BEGIN {
        FS=","
        OFS="="
}
$1 ~ /EDWIN/ {print("Edwin de     "$3)}

awk '(NF == 9) && (NF <= 20) { print $0 }' datos.txt

awk 'NF <= 8 {print $0}' datos.txt

awk">awk '{l[NR] = $0} END {for (i=1; i<=NR-3; i++) print l[i]}'
awk -v n=$(($(wc -l < file) - 3)) 'NR<n' file

awk 'NR>n{print A[NR%n]} {A[NR%n]=$0}' n=3 file


Enumera y muestra cuantos parametros tiene:
awk ' {print NR, NF, $1, $0}'


LÍNEAS PROCESADAS
BEGIN {FS=","}

{print $1,"FNR= "FNR,"NR= "NR}

END{print "Total",NR,"processed lines"}


Funciones
function comando(bts,potencia,i){
	i=3
	printf("%i BTS: %s - Power: %0.f",i,bts,potencia)
}
$1 ==507{
	i=2
	comando($1,$2)
	print(i)
}

------------------------------------------------------------------------------------------------
function saludo(texto, nombre){
	printf("Hola %s , %s \n" , nombre, texto)
}
$1 ==5{
	saludo($2,$3)
}

Decimales
#$5 ~ /3+/ && NF == 9 BEGIN { printf "Percentags = %f\n", $5 }
#$4 ~ /3+/ && NF == 8 BEGIN {print ($1, "%0.4f", $4)}

#$5 ~ /3+/ && NF == 9 {print ($1,$5)} 
#$4 ~ /3+/ && NF == 8 {print ($1,$4)}


$5 ~ /3+/ && NF == 9 {
	printf (" %.4f", $5)
	printf "\n"
}

$4 ~ /3+/ && NF == 8 {
	printf (" %.4f", $4)
	printf "\n"
}
